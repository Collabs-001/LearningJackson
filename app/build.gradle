/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
}

application {
    // Define the main class for the application.
    mainClass = 'dev.creator54.jackson.App'
}

test {
    useJUnitPlatform()
    
    // Configure test reports
    reports {
        junitXml {
            destination = file("$buildDir/test-results")
        }
    }

    // Configure test logging
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        exceptionFormat = 'full' // Print full stack traces for exceptions
        showStandardStreams = true // Show standard output and error in console
    }
    
    afterSuite { desc, result ->
        if (desc.parent == null) {
            println "\nTEST RESULT: ${result.resultType}"
            println "TEST SUMMARY: RAN ${result.testCount} TESTS, " +
                    "${result.successfulTestCount} SUCCEEDED, " +
                    "${result.failedTestCount} FAILED, " +
                    "${result.skippedTestCount} SKIPPED"
        }
    }
}
